name: CI - CD Pipeline

on : 
  push : 
    branches: [compose]
    paths-ignore:
    - 'kubernetes/deployment.yaml'

jobs :
  test :
    name : Unit Testing
    runs-on: ubuntu-latest
    steps :
      - name : Checkout code
        uses: actions/checkout@v4

      - name : Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run : npm ci

      - name : Run test
        run : npm test || echo "No tests found"

  lint :
    name : Static code analysis
    runs-on: ubuntu-latest
    steps :
      - name : Checkout code
        uses: actions/checkout@v4

      - name : Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run : npm ci

      - name : Run Lint
        run : npm run lint
  
  build :
    name : Build Stage
    runs-on: ubuntu-latest
    needs : [test,lint]
    steps :
      - name : Checkout code
        uses: actions/checkout@v4

      - name : Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run : npm ci

      - name : Run Build stage
        run : npm run build 

      - name : Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
  docker :
    name : Build Docker Image
    runs-on: ubuntu-latest
    needs : [build]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps :
      - name : Checkout code
        uses: actions/checkout@v4
        
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/tictactoegame

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile2
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/my-docker-hub-namespace/my-docker-hub-repository
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

        

